[{"content":"Hi,\nI\u0026rsquo;m Foor Foot. I\u0026rsquo;m a programmer. Programming languages I know are: C#, C++, Java and a bit of Python.\nI mainly develop micro controller projects using Arduino as well as projects with Raspberry Pi. Other than that, I make PC and mobile games using a game engine called Unity.\nI use C# with Unity to develop PC and Mobile (Android) games. As of right now, I\u0026rsquo;ve only released games I made for mobile on Google Play. One game that it\u0026rsquo;s still on Google Play store listing is: \u0026ldquo;Progression\u0026rdquo; (I took the others down, because I wasn\u0026rsquo;t satisfied with the quality). Progression is an arcade shooter with limited amount of levels where player can progress their ability throughout the game to defeat the final boss. It\u0026rsquo;s a short project that I worked for 2 - 3 months. I like how the game turned out, despite the frequent bugs.\nI also previously made a game called \u0026ldquo;Sketch Hero\u0026rdquo;, which got taken down because \u0026ldquo;I violated Google policy\u0026rdquo;. For this game, I worked for almost a year. It was an endless runner without a goal other than always reaching for a highest score. One core feature of the game being the infinite procedural terrain generation. It\u0026rsquo;s also a system that I made in Unity I\u0026rsquo;m proud of. More info in sketch hero post section\nI\u0026rsquo;ve also done several projects using micro controller, Arduino and Raspberry Pi. One of the bigger project that I\u0026rsquo;m proud enough to share is Smartwatch project. Using modified Arduino Pro Mini (consumes less power) powered by small 150 mah 3.7V battery, I was able to create a smart watch that connects to an Android device (through an app) via BLE (Bluetooth Low Energy) module. I was really satisfied of how the Smartwatch turned out, because I managed to create in such a compact form, that it was actually useable and wearable in public. This project is discontinued due to multiple issues that I ran into, but I\u0026rsquo;m thinking of bring it back to life. More info in Arduino Smart Watch post section\nI realized the importance of documenting my work, hence I started doing Portfolio. It might be a little bit late (I\u0026rsquo;ve already finished multiple projects), but it\u0026rsquo;s better to be late than never ;). From now I\u0026rsquo;ll be documenting all the work that I do regarding programming. There might be a lot of informations missing on some of my older projects (ex. Sketch Hero, Smartwatch Arduino project), but I\u0026rsquo;ll try my best to file those as well.\nI was formally NANO Engine. I changed my name to Foor Foot Studios because I thought it was more unique. Although NANO Engine had a lot of meaning (New Advanced Noble Optimised) behind it, I ended up changing it because I didn\u0026rsquo;t like \u0026ldquo;Engine\u0026rdquo; at the end of the name, as I didn\u0026rsquo;t use my own \u0026ldquo;engine\u0026rdquo; to make games nor had it at all (stupid reason but that\u0026rsquo;s literally it). I could\u0026rsquo;ve changed it to NANO Studios or somethign similar, but as I said earlier, I felt like Foor Foot was more unique. I also didn\u0026rsquo;t know how I could make the logo suitable to that name. I did make one in photoshop real quick without giving much of a thought. Now I look at it, I really don\u0026rsquo;t understand how it has any relation to its name\u0026hellip; haha.\nYou might be wondering why my name is Foor Foot while my email is fourfootstudios@protonmail.com (well first of all, yes I use protonmail :P) and that\u0026rsquo;s because I originally wanted to call myself Four Foot instead of Foor Foot. But after realizing Four Foot name was taken in Github (another stupid reason\u0026hellip; -_-) I had to change my name entirely to Foor Foot. I didn\u0026rsquo;t want to make a whole entire new email account so I kept using it. I mean to be honest, I like Foor Foot name better just because it has double o\u0026rsquo;s in both of the words. haha.\nIn my portfolio, I\u0026rsquo;ll mainly post devlogs, showcases of my work, etc.\n","description":"","id":0,"section":"about","tags":null,"title":"Me","uri":"http://foorfoot.github.io/about/me/"},{"content":"\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;DISCONTINUED\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\nFor the past 2 weeks, I\u0026rsquo;ve been working on a smartwatch project using my Arduino Pro Mini 3.3v (ATMEGA328P @ 8Mhz). My intention is that my smartwatch will connect to my phone and then receive all the data such as time information, notification from it. As it also receives time information, it does not need a RTC (Real Time Clock), benefitting the size of the smartwatch.\nFor the bluetooth module, I used HM-10 clone, which is a BLE(Bluetooth Low Energy) module. During the development process, I realized one unfortunate thing. My HM-10 clone ONLY supported BLE. Any legacy bluetooth connection technology was unsupported. Therefore, I had to create myself an app just to connect to my device and send information. (I was going to make an app for my smartwatch anyway, but process of developing an app was a bit harder since there wasn\u0026rsquo;t a lot of tutorials on how to connect to a BLE device using Android Studio online.) There is a HM-10 firmware update, which would allow legacy bluetooth technology, but because of the fact that I have the clone HM-10, it didn\u0026rsquo;t work. Other than that, I used an 128x64 OLED display (SSD1306), vibrator (vibration motor), a push button for executing simple task within the watch (turning the screen on when it\u0026rsquo;s in sleep to check time, etc.), a switch to power the device on, an apple watch 4 wrist band/case for the casing and 150mah 3.7v battery for powering the whole device.\nFor the case I just purchased an Apple Watch (I\u0026rsquo;m not sure what series but the biggest one 140mm xD) case. I had to take the back off, though. My watch was too thick. I had to make my own lid, which I did with some cheap fabric (which I got from a dollar store) and I wrapped it around with electrical tape.\nI\u0026rsquo;ve already got the time working correctly as well as it notifies me when I receive a notification in my phone (although it doesn\u0026rsquo;t display from which app the notification was sent from, nor the details of the notification). Here\u0026rsquo;s a quick demo of my smartwatch:\n  (yes I know, I changed google accounts several times xD I\u0026rsquo;m JCN)\nI\u0026rsquo;m still undone with my smartwatch and I\u0026rsquo;ll still improve the software and battery life as it doesn\u0026rsquo;t last long (according to my calculations, around half a week). I\u0026rsquo;m also planning a smartwatch v2, which would use ATTiny85 as the smartwatch I made turned out to be wayy too \u0026ldquo;fat\u0026rdquo;. Haha. But that won\u0026rsquo;t happen in the near future.\nEDIT:\nHey, future me here.\nThis project is discontinued! I was facing a lot of issues during the development. Obviously they could\u0026rsquo;ve been solved, but that caused me to buy new parts, because while I was putting everything back together after I made some micro adjustments, I accidentally touched parts that I shouldn\u0026rsquo;t have and physically broke them. I realized I was spending way to much money on a smartwatch project. I was also busy with high school exams and so on and\u0026hellip; to be honest, I was just not motivated enough after that.\nHowever, I\u0026rsquo;m considering to bring this project back to life again! I\u0026rsquo;ll post an update when I decide.\n","description":"","id":2,"section":"project","tags":null,"title":"Arduino Smartwatch","uri":"http://foorfoot.github.io/project/arduinosmartwatch/"},{"content":"\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;DISCONTINUED\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\nSketch Hero is my first Unity Android game project that I published to Google Play store which I worked for around a year.\nI spent a lot of time developing this game and I\u0026rsquo;m really satisfied how it turned out. I made this game to see how well I know about Unity.\nSketch Hero is an endless runner, which means the player plays the game endlessly while trying to achieve the highest score possible. It\u0026rsquo;s a platformer, where player can interact with map and go fast as possible while dodging all the dangerous obstacles. Kind of like temple run, except it\u0026rsquo;s 2D. Player can also draw lines which are colliders for the character inside the game. So basically, you draw and help the character to go as furthest possible.\nI first got the idea while I was just playing around with Unity game engine. I made a simple drawing system in Unity to learn about different components in Unity. Then, this idea suddenly came into my mind. That\u0026rsquo;s how Sketch Hero was born.\nThe original name was Pocket Runner, but after noticing that this name is too common, I realized not a lot of people are actually going to find this game on Google Play (there were also an app called Pocket Runner on Google Play already. I didn\u0026rsquo;t want to use the same name for my game.). After a lot of thoughts, I ended up with the name: \u0026ldquo;Sketch Hero\u0026rdquo;.\nAlmost all of the graphics are downloaded from the internet. I BELIEVE they can be used without giving credit. I didn\u0026rsquo;t know/care licensing that much back then.\nI know for a fact that the assets (like characters) are mostly downloaded from kenney.nl (great website btw) and their asset is CC0, however.\nBecause this is an endless runner, I had to generate terrain procedurally. I didn\u0026rsquo;t want to make the game boring and have the same \u0026ldquo;pieces\u0026rdquo; of the map going (or even worse, same map) over and over again.\nSolution I used was perlin noise. It\u0026rsquo;s not an entirely random noise. Each has some sort of a relation to eachother and this was just perfect. Because the terrain had to be smooth and not jump around (if this makes sense at all\u0026hellip; the y coordinate of the terrain has to be smoothly interpretated between each x value). Now I could\u0026rsquo;ve also used pseudorandom number generator (the \u0026ldquo;normal\u0026rdquo; random number generator) and interpretated with linear interpretation method or something similar, but this would give me too much fluctuation that I can barely control.\nI first generated different \u0026ldquo;pieces\u0026rdquo; of the map (around 10 x tiles laid down together) using perlin noise. This procedure happened while loading the game, which means before the game starts. For the release version of Pocket Runner, I ended up generating 60 different pieces. I know it\u0026rsquo;s a bit too much, but I didn\u0026rsquo;t want to make the game feel repetitive at all. This was neccessary, as generating the map real time (noise calculations, placement etc.) was taking up way too much performance on a mobile device. Although high end mobile device wasn\u0026rsquo;t bothered by this at all, I was also targetting for lower end smartphones, so optimization was mandatory. Once all the pieces are generated, the game randomly picks a generated piece from pieces array and lays it down real time. As the character moves further and further, new pieces gets picked randomly and placed down while the older pieces get disabled (performance reasons).\nProcedural terrain generation is the feature of the game that I\u0026rsquo;m most proud of. If I look at the code right now, there are still a lot of major changes that I can do to make it cleaner and more efficient. But if it works, hey it works :)\nI tried to make the UI simple and interactable. I spent a lot of time making them, hopefully they turned out to be good. I\u0026rsquo;m still bad at making them xD\nI also made tutorial for this game (with animations too!), but I\u0026rsquo;m not sure how well this turned out, as some people still didn\u0026rsquo;t know how to \u0026ldquo;properly\u0026rdquo; play the game even after reading the whole tutorial. Some recommended me to do a tutorial within game, interactively. Perhaps that\u0026rsquo;s something that I should consider in my next game.\nShop system is also something that I worked on for a long time. It also turned out to be better than I expected.\nI didn\u0026rsquo;t really know how to make a proper settings menu, so this is what I did\u0026hellip;\nI heard great feedback from the game, overall a very fun experience so I\u0026rsquo;m really happy about this project.\n   (I was NANO Engine back then.)\nEDIT:\nHey, future me here.\nThis project is discontinued! After hearing my game got taken down by Google for \u0026ldquo;violating Google policy\u0026rdquo; (I mean, I understand I used some assets from online, but they were all CC0 which means I was able to use them without giving credit whatsoever. Maybe I understood the licensing incorrectly, I didn\u0026rsquo;t really bother with licensing back then.), I just didn\u0026rsquo;t want to work on it any further. Without knowing the exact reason why it was violated, I wasn\u0026rsquo;t motivated enough to polish the game, make adjustments and post it again on Google Play. I know I could email Google about the problem and ask what went wrong, but back then, I just wanted to move along.\n","description":"","id":3,"section":"project","tags":null,"title":"Sketch Hero","uri":"http://foorfoot.github.io/project/sketchhero/"}]